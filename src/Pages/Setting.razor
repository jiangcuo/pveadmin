@using System.Diagnostics;
@using Corsinvest.ProxmoxVE.Api;

@page "/setting"

<h1>这是设置页面</h1>

<div class="login-container">
    <div class="setting-box">
        <div class="head">
            <div class="line"></div>
            <label>服务器设置</label>
        </div>
        <div class="content">
            <div class="st-2">服务器地址：</div>
            <div class="st-3">
                <input placeholder="请输入" @bind="@Vars.Host" />
            </div>
        </div>
        <div class="content">
            <div class="st-2">账号：</div>
            <div class="st-3">
                <input placeholder="请输入" @bind="@Vars.UserFullname" />
            </div>
        </div>
        <div class="content">
            <div class="st-2">密码：</div>
            <div class="st-3">
                <input type="password" placeholder="请输入" @bind="@Vars.UserPassword" />
            </div>
        </div>
        <div class="line">
            <button class="empty" @onclick="@TestServer">点击测试</button>
            <button class="empty" @onclick="@Saveconfig">点击保存</button>
        </div>
    </div>
</div>
<style scoped>
    .aui-radio:checked ~ .txt {
        color: #3468EF;
    }
</style>

@code {
    [Parameter] public EventCallback OnClose { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
    public Task CloseSetting()
    {
        return OnClose.InvokeAsync(null);
    }

    public async Task TestServer()
    {
        var res = await Options.TestServerAsync();
        if (res.ToString() == "401")
        {
            await Application.Current.MainPage.DisplayAlert("测试成功", Vars.Host, "确定");
        }
        else
        {
            await Application.Current.MainPage.DisplayAlert("测试失败", Vars.Host +" 错误代码为： "+ res.ToString(), "确定");
        }
    }

    public void Saveconfig()
    {
        Options.SaveConfig();
    }
    }
